import pandas as pd
import plotly.express as px

df = pd.read_csv(r"data.txt", 
                 delim_whitespace=True, header=None, 
                 names=['Date_Time', 'Agency', 'Event','a','b','c','d','e']) 
print(df)

df.sort_values(by='Date_Time', inplace=True)


fig = px.bar(df, 
             x='Date_Time',  
             color='Event',  
             title="Correctly Ordereda Vertical Bar Graph",
            
             category_orders={'Date_Time': df['Date_Time'].tolist()},
            hover_data=['Date_Time','Agency','Event'])


fig.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)


fig.show()
fig.update_layout()

fig.update_layout(
    xaxis_title='',
    yaxis_title='',
    xaxis=dict(showticklabels=False),
    yaxis=dict(showticklabels=False),
)


day1 = df[df['Date_Time'].str.contains('2024-168')]
day2 = df[df['Date_Time'].str.contains('2024-169')]
day3 = df[df['Date_Time'].str.contains('2024-170')]
day4 = df[df['Date_Time'].str.contains('2024-171')]
day5 = df[df['Date_Time'].str.contains('2024-172')]
day6 = df[df['Date_Time'].str.contains('2024-173')]
day7 = df[df['Date_Time'].str.contains('2024-174')]
day8 = df[df['Date_Time'].str.contains('2024-175')]



fig1 = px.bar(day1, 
             x='Date_Time',  
             color='Event',  
             title="Day 1",
            
             category_orders={'Date_Time': df['Date_Time'].tolist()},
            hover_data=['Date_Time','Agency','Event'])


fig1.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)


fig1.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)

fig1.update_layout(
    xaxis_title='Time',
    yaxis_title='Count',
    xaxis=dict(showticklabels=False),
    yaxis=dict(showticklabels=False),
)
fig1.show()
df.sort_values(by='Date_Time', inplace=True)
df.sort_values(by='Date_Time', inplace=True)

fig2 = px.bar(day2, 
             x='Date_Time',  
             color='Event',  
             title="Day Two Data",
            
             category_orders={'Date_Time': df['Date_Time'].tolist()},
            hover_data=['Date_Time','Agency','Event'])


fig2.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)


fig2.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)

fig2.update_layout(
    xaxis_title='Time',
    yaxis_title='Count',
    xaxis=dict(showticklabels=False),
    yaxis=dict(showticklabels=False),
)
fig2.show()


fig3 = px.bar(day3, 
             x='Date_Time',  
             color='Event',  
             title="Day 3",
            
             category_orders={'Date_Time': df['Date_Time'].tolist()},
            hover_data=['Date_Time','Agency','Event'])


fig3.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)


fig3.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)

fig3.update_layout(
    xaxis_title='Time',
    yaxis_title='Count',
    xaxis=dict(showticklabels=False),
    yaxis=dict(showticklabels=False),
)
fig3.show()

fig4 = px.bar(day4, 
             x='Date_Time',  
             color='Event',  
             title="Day 4",
            
             category_orders={'Date_Time': df['Date_Time'].tolist()},
            hover_data=['Date_Time','Agency','Event'])


fig4.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)


fig4.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)

fig4.update_layout(
    xaxis_title='Time',
    yaxis_title='Count',
    xaxis=dict(showticklabels=False),
    yaxis=dict(showticklabels=False),
)
fig4.show()
fig5 = px.bar(day5, 
             x='Date_Time',  
             color='Event',  
             title="Day 5",
            
             category_orders={'Date_Time': df['Date_Time'].tolist()},
            hover_data=['Date_Time','Agency','Event'])


fig5.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)


fig5.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)

fig5.update_layout(
    xaxis_title='Time',
    yaxis_title='Count',
    xaxis=dict(showticklabels=False),
    yaxis=dict(showticklabels=False),
)
fig5.show()
fig6 = px.bar(day6, 
             x='Date_Time',  
             color='Event',  
             title="Day 6",
            
             category_orders={'Date_Time': df['Date_Time'].tolist()},
            hover_data=['Date_Time','Agency','Event'])


fig6.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)


fig6.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)

fig6.update_layout(
    xaxis_title='Time',
    yaxis_title='Count',
    xaxis=dict(showticklabels=False),
    yaxis=dict(showticklabels=False),
)
fig6.show()
fig7 = px.bar(day7, 
             x='Date_Time',  
             color='Event',  
             title="Day 7",
            
             category_orders={'Date_Time': df['Date_Time'].tolist()},
            hover_data=['Date_Time','Agency','Event'])


fig7.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)


fig7.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)

fig7.update_layout(
    xaxis_title='Time',
    yaxis_title='Count',
    xaxis=dict(showticklabels=False),
    yaxis=dict(showticklabels=False),
)
fig7.show()
fig8 = px.bar(day8, 
             x='Date_Time',  
             color='Event',  
             title="Day 8",
            
             category_orders={'Date_Time': df['Date_Time'].tolist()},
            hover_data=['Date_Time','Agency','Event'])


fig8.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)


fig8.update_layout(xaxis=dict(tickangle=-45),bargap=0.5,)

fig8.update_layout(
    xaxis_title='Time',
    yaxis_title='Count',
    xaxis=dict(showticklabels=False),
    yaxis=dict(showticklabels=False),
)
fig8.show()
